TextRank를 이용한 키워드 추출과 핵심 문장 추출

문서 집합을 요약하는 방법으로 키워드와 핵심 문장을 선택하는 extractive methods 를 이용할 수 있습니다.
이를 위해 가장 널리 이용되는 방법 중 하나는 2004년에 제안된 TextRank 입니다.
TextRank 는 word graph 나 sentence graph 를 구축한 뒤, Graph ranking 알고리즘인 PageRank를 이용하여 각각 키워드와 핵심 문장을 선택합니다.
그리고 이들을 이용하여 주어진 문서 집합을 요약합니다.
그 뒤, TextRank 와 유사한 방법들이 여러 제안되었지만, 큰 차이는 없습니다.
이번 포스트에서는 TextRank 의 원리를 정리하고, TextRank 가 키워드와 핵심 문장을 추출하는 기준에 대한 직관적인 탐색도 해봅니다.

Introduction
문서 집합을 요약하는 분야를 summarization 이라 하며, 이 분야의 접근법은 extractive approaches 와 abstractive approaches 로 나뉩니다.
Extractive approaches 는 주어진 문서 집합 내에서 이를 대표할 수 있는 단어들이나 문장들을 선택하는 방법입니다.
이러한 방법은 주어진 데이터에서 단어와 문장을 선택하기 때문에 터무니없는 요약 결과를 만들어 낼 가능성은 적습니다.
하지만 가능한 표현이 제한된다는 단점이 있습니다.
최근의 자연어처리 분야에서 딥러닝 모델들의 발전이 있기 전에는 extractive approaches 방법을 떠올리면 사실 TextRank 외에 다른 방법들이 잘 떠오르지 않을 정도로 TextRank가 널리
이용되었습니다.

그와 반대로 abstractive approaches 는 사람이 요약문을 만드는 것처럼, 문서 집합 혹은 한 문서의 내용을 기반으로 요약문을 생성하는 방법입니다.
최근에는 seq2seq + attention 기반 모델에 copy mechanism, pointer network 등의 기법들이 더해지며 많은 발전을 이루고 있는 분야입니다.
그리고 최근의 연구들은 이 두 접근법을 부분적으로 모두 이용하는 형태로 발전하고 있습니다. 

그런데 abstractive approaches 의 가장 큰 단점은 학습 데이터를 기반으로 한 supervised learning 이라는 점입니다.
특정 도메인의 문서 집합을 요약하는 모델을 만들기 위해서는 해당 도메인을 요약한 학습 데이터가 반드시 필요합니다.
이에 반해 TextRank로 대표되는 전통적인 extractive approaches 는 대부분 통계 (PageRank) 기반으로 작동하기 때문에 별도의 학습 데이터가 필요하지 않습니다.
또한 모델 특성상 학습도 매우 빠릅니다.
Gensim 에 포함되어 있는 summarizer 함수도 TextRank와 비슷한 방식으로 작동합니다.

TextRank는 핵심 단어를 선택하기 위해서 단어 간의 co-occurrence graph (동시 발생 그래프) 를 만듭니다.
핵심 문장을 선택하기 위해서는 문장 간 유사도를 기반으로 sentence similarity graph 를 만듭니다.
그 뒤 각각 그래프에 PageRank를 학습하여 각 마디 (단어 혹은 문장) 의 랭킹을 계산합니다.
이 랭킹이 높은 순서대로 키워드와 핵심 문장이 됩니다.
TextRank의 원리를 이해하기 위하여 우선 PageRank를 간략히 리뷰합니다.

tokenize
word vector, word embedding
textrank
